#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 normalIn;

out vec3 normal;
out vec3 fragPosition;
out vec4 fragPosLightSpace;

uniform mat4 body;
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform mat4 lightSpaceMatrix;

void main(){
    gl_Position = projection * view * model * body * vec4(aPos, 1.0);
	fragPosition = vec3(model * body * vec4(aPos, 1.0));
	normal = normalize(mat3(transpose(inverse(model * body))) * normalIn); 
	fragPosLightSpace = lightSpaceMatrix * vec4(fragPosition, 1.0);
}